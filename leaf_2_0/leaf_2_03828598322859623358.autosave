Sources sources;
ArrayList<Vein> veins = new ArrayList<Vein>();

int dartThrows = 1000;

int step = 20;
int FOW = 30;
int DENS = 50;

float nodeSize = 20.0;
float sourceSize = 20.0;


void setup() {
	size(500,500);
  veins.add(new Vein(new Node(width / 2, height - step)));
  veins.get(0).addNode(new Node(width / 2, height - 2 * step));
  veins.get(0).addNode(new Node(width / 2, height - 3 * step));
	// Vein vein1 = new Vein(new Node(width / 2, height - step));
  background(230);
  for (int i = 0; i < veins.size(); i++){
    Vein vein = veins.get(i);
    vein.show(color(20), nodeSize);
  }
  sources = new Sources(dartThrows, veins); //<>//
  sources.show(color(255,0,0), sourceSize);
	frameRate(2); //<>//
}

void draw() {
  background(230);
  sources.findNearestNodes(veins);
  // veins.get(0).addNode(new Node(width / 2, height - step * frameCount));
  sources.show(color(255,0,0), sourceSize);
  for (int i = 0; i < veins.size(); i++){
    Vein vein = veins.get(i); //<>//
    vein.norm();
    vein.show(color(20), nodeSize);
    vein.showSources(color(230, 0, 0));
    vein.showNorms(color(50));
  }
  println(frameRate);
}
